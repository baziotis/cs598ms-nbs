{
  "cells": [
    {
      "raw": "# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('../input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session",
      "total-ns": 935987428
    },
    {
      "raw": "df = pd.read_csv('../input/highereducationstudentsperformanceevaluation/DATA (1).csv')\ndf.head()",
      "total-ns": 5747159
    },
    {
      "raw": "df.shape",
      "total-ns": 388240
    },
    {
      "raw": "df.info()",
      "total-ns": 5421004
    },
    {
      "raw": "# Rename columns\ndf.rename(columns={'1': 'AGE', '7': 'SINGLE','20':'ATTENDENCE','25':'NOTETAKING','30': 'GPA'}, inplace=True)\n\n# Access the renamed columns using loc\npreview_columns = ['AGE', 'SINGLE', 'NOTETAKING','GPA','GRADE']\ndf.loc[:, preview_columns].head()",
      "total-ns": 1520716
    },
    {
      "raw": "df_clean = df.copy()\n\n# List of columns to keep\nselected_columns = [\n    'AGE',\n    'SINGLE',\n    'NOTETAKING',\n    'GPA',\n    'GRADE',\n    'ATTENDENCE',\n]\n\n# Get the list of columns that exist in the DataFrame but are not in the selected_columns list\ncolumns_to_remove = [col for col in df_clean.columns if col not in selected_columns]\n\n# Drop the columns that are not in the selected_columns list\ndf_clean.drop(columns=columns_to_remove, inplace=True)\n\n# Display DataFrame info to verify\ndf_clean.info()",
      "total-ns": 4130003
    },
    {
      "raw": "df_cut = df.copy()\n#Cutting our data to make it more managable\ncolumns_to_remove = [\n    '3',\n    '9',\n    '10',\n    '14',\n    '15',\n    '16',\n    '21',\n    '23',\n    '24',\n    '28',\n    '5',\n    '6',\n    '22',\n    'COURSE ID',\n]\n# Drop the columns to remove\ndf_cut.drop(columns=columns_to_remove, inplace=True)\n\n# Display DataFrame info to verify\ndf_cut.info()",
      "total-ns": 5128533
    },
    {
      "raw": "# Rename columns\ndf_cut.rename(columns={\n    '1': 'AGE',\n    '2': 'SEX',\n    '4': 'SCHOLSHIP',\n    '7': 'SINGLE',\n    '8': 'SALARY',\n    '11': 'MOTHERS_EDU',\n    '12': 'FATHERS_EDU',\n    '13': 'SIBLNIGS',\n    '17': 'STUDY_HOURS',\n    '18': 'READS_NON_FIC',\n    '19': 'READS_FIC',\n    '25': 'NOTETAKING',\n    '26': 'LISTENS',\n    '27': 'DISCUSSION',\n    '29': 'PAST_GPA',\n    '30': 'GPA',}, inplace=True)",
      "total-ns": 1038418
    }
  ]
}