{
  "cells": [
    {
      "raw": "import os\nimport pandas as pd\nimport numpy as np\n\n# visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\n\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen']\nkaggle_colors = ['#39c5ff', '#ffffff', '#f2f2f2', '#9ca3a4', '#3f484b']\nfont = 'Rubik'",
      "total-ns": 2539115388
    },
    {
      "raw": "df = pd.read_csv('../input/kaggle-survey-2022/kaggle_survey_2022_responses.csv')",
      "total-ns": 608335669
    },
    {
      "raw": "df",
      "total-ns": 514907
    },
    {
      "raw": "df = df[1:]",
      "total-ns": 376049
    },
    {
      "raw": "factor = 10\ndf = pd.concat([df]*factor, ignore_index=True)\ndf.info()",
      "total-ns": 444388756
    },
    {
      "raw": "df['Duration (in seconds)'] = df['Duration (in seconds)'].astype('int')",
      "total-ns": 697530396
    },
    {
      "raw": "df.loc[df[\"Q3\"] == \"Nonbinary\", \"Q3\"] = \"Others\"\ndf.loc[df[\"Q3\"] == \"Prefer not to say\", \"Q3\"] = \"Others\"\ndf.loc[df[\"Q3\"] == \"Prefer to self-describe\", \"Q3\"] = \"Others\"",
      "total-ns": 30399066
    },
    {
      "raw": "gender_count = df.groupby(['Q3']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig=px.bar(data_frame=gender_count, x='Q3', y='count',color='Q3',template='plotly_dark',color_discrete_sequence=['#39c5ff','#F5F5F1'],\n#                  text_auto=True,barmode='stack',\n#           title=\"Gender Countplot\")\n\n# fig.update_traces(textfont_size=20, textangle=0, textposition=\"outside\", cliponaxis=False)\n# fig.update_traces( marker_line_color='#3f484b',\n#                   marker_line_width=3.5)\n\n# fig.update_layout(\n#     title=\"Gender Countplot\",\n#     xaxis_title=\"Genders\",\n#     yaxis_title=\"Count\",\n#     legend_title=\"Genders\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=18\n#     )\n# )\n\n# fig.show()",
      "total-ns": 11915652
    },
    {
      "raw": "duration_count = df.groupby(['Duration (in seconds)']).size().reset_index().rename(columns={0: 'count'})\nduration_count = duration_count[:1000]\n\n# STEFANOS: Disable plotting\n# fig=px.histogram(data_frame=duration_count, x='Duration (in seconds)', y='count',template='plotly_dark',color_discrete_sequence=['#39c5ff','#F5F5F1'],\n#                  text_auto=True,barmode='stack',\n#           title=\"Duration Histogram\")\n\n# fig.update_traces(textfont_size=20, textangle=0, textposition=\"outside\", cliponaxis=False)\n# fig.update_traces( marker_line_color='#3f484b',\n#                   marker_line_width=3.5)\n\n# fig.update_layout(\n#     title=\"Duration Histogram\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=14\n#     )\n# )\n\n# fig.show()",
      "total-ns": 8488992
    },
    {
      "raw": "age_count = df.groupby(['Q2']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig=px.bar(data_frame=age_count, x='Q2', y='count',color='Q2',template='plotly_dark',color_discrete_sequence=['#39c5ff','#F5F5F1'],\n#                  text_auto=True,barmode='stack',\n#           title=\"Age Countplot\")\n\n# fig.update_traces(textfont_size=20, textangle=0, textposition=\"outside\", cliponaxis=False)\n# fig.update_traces( marker_line_color='#3f484b',\n#                   marker_line_width=3.5)\n\n# fig.update_layout(\n#     title=\"Age Countplot\",\n#     xaxis_title=\"Age Groups\",\n#     yaxis_title=\"Count\",\n#     legend_title=\"Age Groups\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=12\n#     )\n# )\n\n# fig.show()",
      "total-ns": 9256162
    },
    {
      "raw": "country_count = df.groupby(['Q4']).size().reset_index().rename(columns={0: 'count'})\ncountry_count = country_count.sort_values(by=['count'], ascending=False).reset_index(drop=True)\ncountry_count = country_count[:10]\n\n# STEFANOS: Disable plotting\n# fig=px.bar(data_frame=country_count,x='Q4', y='count',color='Q4',template='plotly_dark',color_discrete_sequence=['#39c5ff','#F5F5F1'],\n#                  text_auto=True,barmode='stack',\n#           title=\"Country Countplot\")\n\n# fig.update_traces(textfont_size=20, textangle=0, textposition=\"outside\", cliponaxis=False)\n# fig.update_traces( marker_line_color='#3f484b',\n#                   marker_line_width=3.5)\n\n# fig.update_layout(\n#     title=\"Top 10 Countries Plot\",\n#     xaxis_title=\"Countries\",\n#     yaxis_title=\"Count\",\n#     legend_title=\"Countries\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=13\n#     )\n# )\n\n# fig.show()",
      "total-ns": 12507745
    },
    {
      "raw": "country_df = df.groupby(['Q4']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig = px.choropleth(country_df, locations=\"Q4\", color=\"count\", \n#                     locationmode='country names',\n#                     range_color=[0,5000],\n#                     color_continuous_scale=[(0, \"#ffffff\"), (1, '#39c5ff')],\n#                     template='plotly_dark'\n#                    )\n\n# fig.update_layout(\n#     title=\"World Map\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=14\n#     )\n# )\n\n# fig.show()",
      "total-ns": 11890298
    },
    {
      "raw": "student_count = df.groupby(['Q5']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig = go.Figure(\n#     data=[go.Pie(labels=student_count['Q5'], values=student_count['count'], hole=.4)])\n\n# fig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n#                   marker=dict(colors=colors, line=dict(color='#000000', width=2)))\n\n# fig.update_layout(\n#     title=\"Student Count\",\n#     template='plotly_dark',\n#     font=dict(\n#         family=\"Rubik\",\n#         size=18\n#     )\n# )\n\n# fig.show()",
      "total-ns": 9857041
    },
    {
      "raw": "degree_count = df.groupby(['Q8']).size().reset_index().rename(columns={0: 'count'})\ndegree_count.loc[degree_count[\"Q8\"] == \"Some college/university study without earning a bachelor\u2019s degree\", \"Q8\"] = \"College Without Bachelors\"\n\n# STEFANOS: Disable plotting\n# fig = go.Figure(\n#     data=[go.Pie(labels=degree_count['Q8'], values=degree_count['count'], hole=.4)])\n\n# fig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n#                   marker=dict(colors=colors, line=dict(color='#000000', width=2)))\n\n# # fig.update_layout(template='plotly_dark')\n\n# fig.update_layout(\n#     title=\"Educational Background\",\n#     template='plotly_dark',\n#     font=dict(\n#         family=\"Rubik\",\n#         size=14\n#     )\n# )\n\n# fig.show()",
      "total-ns": 18770687
    },
    {
      "raw": "experience_count = df.groupby(['Q16']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig = go.Figure(\n#     data=[go.Pie(labels=experience_count['Q16'], values=experience_count['count'], hole=.4)])\n\n# fig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n#                   marker=dict(colors=colors, line=dict(color='#000000', width=2)))\n\n# # fig.update_layout(template='plotly_dark')\n\n# fig.update_layout(\n#     title=\"ML Experience\",\n#     template='plotly_dark',\n#     font=dict(\n#         family=\"Rubik\",\n#         size=14\n#     )\n# )\n\n# fig.show()",
      "total-ns": 16507529
    },
    {
      "raw": "annual_income_df = df.groupby(['Q29']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig = go.Figure(\n#     data=[go.Pie(labels=annual_income_df['Q29'], values=annual_income_df['count'], hole=.4)])\n\n# fig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n#                   marker=dict(colors=colors, line=dict(color='#000000', width=2)))\n\n# # fig.update_layout(template='plotly_dark')\n\n# fig.update_layout(\n#     title=\"Yearly Compensation in USD\",\n#     template='plotly_dark',\n#     font=dict(\n#         family=\"Rubik\",\n#         size=14\n#     )\n# )\n\n# fig.show()",
      "total-ns": 16943464
    },
    {
      "raw": "gender_duration_count = df.groupby(['Duration (in seconds)', 'Q3']).size().reset_index().rename(columns={0: 'count'})\ngender_duration_count = gender_duration_count[:3000]\n\n# STEFANOS: Disable plotting\n# hist_colors = ['#39c5ff', '#ffffff', 'orange']\n\n# fig = px.histogram(gender_duration_count, x=\"Duration (in seconds)\", y=\"count\", color='Q3',\n#                    marginal=\"box\", color_discrete_sequence=hist_colors,\n#                    hover_data=gender_duration_count.columns,\n#                   template='plotly_dark')\n\n# fig.update_layout(\n#     title=\"Duration X Gender\",\n#     xaxis_title=\"Duration (in seconds)\",\n#     yaxis_title=\"Count\",\n#     legend_title=\"Gender\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=16\n#     )\n# )\n\n# fig.show()",
      "total-ns": 26842508
    },
    {
      "raw": "country_gender = df.groupby(['Q4', 'Q3']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig = px.treemap(country_gender, values='count', path=['Q4', 'Q3'], template='plotly_dark',\n#                 title=\"Country X Gender TreeMap\")\n# fig.update_traces(textinfo=\"label+percent parent\")\n\n# fig.show()",
      "total-ns": 30431571
    },
    {
      "raw": "age_duration_df = df[df['Duration (in seconds)']<2000].groupby('Q2')['Duration (in seconds)'].mean().round(1).reset_index()\n\n# STEFANOS: Disable plotting\n# fig=px.bar(data_frame=age_duration_df, x='Q2', y='Duration (in seconds)',\n#            color='Q2',template='plotly_dark',color_discrete_sequence=['#39c5ff','#F5F5F1'],\n#                  text_auto=True,barmode='stack',\n#           title=\"Age Countplot\")\n\n# fig.update_traces(textfont_size=20, textangle=0, textposition=\"outside\", cliponaxis=False)\n# fig.update_traces( marker_line_color='#3f484b',\n#                   marker_line_width=3.5)\n\n# fig.update_layout(\n#     title=\"Duration with Age\",\n#     xaxis_title=\"Age Groups\",\n#     yaxis_title=\"Duration (in seconds)\",\n#     legend_title=\"Age Groups\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=12\n#     )\n# )\n\n# fig.show()",
      "total-ns": 755707760
    },
    {
      "raw": "education_gender = df.groupby(['Q8', 'Q3']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig = px.treemap(education_gender, values='count', path=['Q8', 'Q3'], template='plotly_dark',\n#                 title=\"Education X Gender TreeMap\")\n# fig.update_traces(textinfo=\"label+percent parent\")\n\n# fig.show()",
      "total-ns": 30691155
    },
    {
      "raw": "## Not Including India bcz it acts as an outlier here\ntop_9_countries = ['United States of America','Other', 'Brazil',\n                   'Nigeria', 'Pakistan', 'Japan', 'China', 'Egypt', 'Mexico']\n\ntop_9_countries_df = df[df['Q4'].isin(top_9_countries)]\n# STEFANOS: Disable plotting\n# fig = px.density_heatmap(\n#     top_9_countries_df, x='Q4', y='Q2',\n#     marginal_x='histogram', marginal_y='histogram', histfunc='count'\n# )\n\n# fig.update_yaxes(categoryorder='array', categoryarray= ['18-21','22-24','25-29','30-34', '35-39',\n#                                                         '40-44', '45-49', '50-54', '55-59', '60-69', '70+'])\n\n# fig.update_layout(\n#     title=\"Countires X Age Groups Density Plot\",\n#     xaxis_title=\"Countries\",\n#     yaxis_title=\"Age Groups\",\n#     font=dict(\n#         family=\"Rubik\",\n#         size=14\n#     )\n# )\n\n# fig.show()",
      "total-ns": 252925858
    },
    {
      "raw": "gender_student = df.groupby(['Q3', 'Q5']).size().reset_index().rename(columns={0: 'count'})\n\n# STEFANOS: Disable plotting\n# fig = px.sunburst(gender_student, values='count', path=['Q3', 'Q5'], template='plotly_dark',\n#                 title=\"Gender X Student Sunburst\")\n# fig.update_traces(textinfo=\"label+percent parent\")\n\n# fig.show()",
      "total-ns": 29990638
    }
  ]
}