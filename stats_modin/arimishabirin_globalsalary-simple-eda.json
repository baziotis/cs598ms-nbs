{
  "cells": [
    {
      "raw": "# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('../input'):\n    for filename in filenames:\n        file_  = os.path.join(dirname, filename)\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session",
      "total-ns": 15820081569
    },
    {
      "raw": "df = pd.read_csv(file_)\n\ndf.head(5)",
      "total-ns": 4890636
    },
    {
      "raw": "df.duplicated().sum()",
      "total-ns": 1473028
    },
    {
      "raw": "df.isnull().sum()",
      "total-ns": 897939
    },
    {
      "raw": "df.describe(include = 'all')",
      "total-ns": 9796753
    },
    {
      "raw": "df = df.drop(['wage_span'] , axis = 1)",
      "total-ns": 942069
    },
    {
      "raw": "df.sort_values('continent_name')",
      "total-ns": 620480
    },
    {
      "raw": "sorted_order = (\n    df.groupby('continent_name' , as_index = False)\n    .agg({'median_salary':'mean'})\n    .sort_values('median_salary' , ascending = True)\n)['continent_name'].values",
      "total-ns": 2076617
    },
    {
      "raw": "tp5_highestslry_contry_conti = (\n    df.sort_values('highest_salary' , ascending = False).groupby('continent_name')\n    .head(5)\n    .sort_values(['continent_name','highest_salary'] , ascending = [True, False])\n)\n\ncont_order = (\n    df.groupby('continent_name')\n    .agg({'highest_salary':\"max\"})\n    .sort_values('highest_salary' , ascending = False)\n    .index\n).tolist()",
      "total-ns": 4402732
    },
    {
      "raw": "cont_order = (\n    df.groupby('continent_name')\n    .agg({'lowest_salary':\"min\"})\n    .sort_values('lowest_salary' , ascending = False)\n    .index\n).tolist()\n\ntp5_lwstslry_contry_conti = (\n    df.sort_values('lowest_salary' , ascending = True).groupby('continent_name')\n    .head(5)\n    .sort_values(['continent_name','lowest_salary'] , ascending = [True, True])\n)",
      "total-ns": 3482982
    }
  ]
}